{
  "_from": "can-control@3.2.2",
  "_id": "can-control@3.2.2",
  "_inBundle": false,
  "_integrity": "sha512-yn+oxRS8pXnBGisiDhEdMfXhKmE3P2waP4vKVu+uKUXfo69Zd535KrpwwDY9WfUwNETwYy7PwIVDmHmx7rqIgw==",
  "_location": "/can-control",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "can-control@3.2.2",
    "name": "can-control",
    "escapedName": "can-control",
    "rawSpec": "3.2.2",
    "saveSpec": null,
    "fetchSpec": "3.2.2"
  },
  "_requiredBy": [
    "/",
    "/can-component"
  ],
  "_resolved": "https://registry.npmjs.org/can-control/-/can-control-3.2.2.tgz",
  "_shasum": "21a3c1be388c9eed581c0fd52761239ac26541f2",
  "_spec": "can-control@3.2.2",
  "_where": "/Library/WebServer/Documents/GitHub/canjs",
  "author": {
    "name": "Bitovi",
    "email": "contact@bitovi.com",
    "url": "http://bitovi.com"
  },
  "bugs": {
    "url": "https://github.com/canjs/can-control/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "can-compute": "^3.3.1",
    "can-construct": "^3.2.0",
    "can-event": "^3.5.0",
    "can-namespace": "1.0.0",
    "can-observation": "^3.3.1",
    "can-reflect": "^1.2.1",
    "can-stache-key": "0.1.0",
    "can-types": "^1.1.0",
    "can-util": "^3.9.0"
  },
  "deprecated": false,
  "description": "Declarative event bindings",
  "devDependencies": {
    "can-define": "^1.3.3",
    "can-map": "^3.3.1",
    "done-serve": "^1.2.0",
    "jshint": "^2.9.1",
    "steal": "^1.2.8",
    "steal-qunit": "^1.0.1",
    "steal-tools": "^1.1.2",
    "testee": "^0.7.0"
  },
  "homepage": "http://canjs.com",
  "keywords": [
    "canjs",
    "canjs-plugin",
    "donejs"
  ],
  "license": "MIT",
  "main": "can-control",
  "name": "can-control",
  "repository": {
    "type": "git",
    "url": "git://github.com/canjs/can-control.git"
  },
  "scripts": {
    "build": "node build.js",
    "develop": "done-serve --static --develop --port 8080",
    "document": "bit-docs",
    "jshint": "jshint can-control.js can-control_test.js --config",
    "postversion": "git push --tags && git checkout master && git branch -D release && git push",
    "preversion": "npm test && npm run build",
    "release:major": "npm version major && npm publish",
    "release:minor": "npm version minor && npm publish",
    "release:patch": "npm version patch && npm publish",
    "release:pre": "npm version prerelease && npm publish --tag=pre",
    "test": "npm run jshint && npm run testee",
    "testee": "testee test/test.html --browsers firefox",
    "version": "git commit -am \"Update dist for release\" && git checkout -b release && git add -f dist/"
  },
  "steal": {
    "configDependencies": [
      "live-reload"
    ]
  },
  "version": "3.2.2"
}
